[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/less-cfb-plays-2023-than-2022/index.html",
    "href": "posts/less-cfb-plays-2023-than-2022/index.html",
    "title": "Big Ten teams are averaging only slightly fewer plays in 2023 than in 2022",
    "section": "",
    "text": "Load the tidyverse.\n\n\nCode\nlibrary(tidyverse)\n\n\nCreate college football data frames for 2022 and 2023.\n\n\nCode\nlogs22 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\")\nlogs23 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\n\n\nCreate a list of Big 10 teams.\n\n\nCode\nbig10 &lt;- c(\"Nebraska Cornhuskers\", \"Iowa Hawkeyes\", \"Minnesota Golden Gophers\", \"Illinois Fighting Illini\", \"Northwestern Wildcats\", \"Wisconsin Badgers\", \"Indiana Hoosiers\", \"Purdue Boilermakers\", \"Ohio State Buckeyes\", \"Michigan Wolverines\", \"Michigan State Spartans\", \"Penn State Nittany Lions\", \"Rutgers Scarlet Knights\", \"Maryland Terrapins\")\n\n\nFilter the data for 2022 using the Big 10 list.\n\n\nCode\nbig22 &lt;- logs22|&gt; filter(TeamFull %in% big10)\n\n\nCalculate the average number of offensive plays per Big 10 team in 2022.\n\n\nCode\nbig22plays &lt;- big22 |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    avgPlays = mean(OffensivePlays)\n  )\n\n\nMake a bar chart of the 2022 Big Ten offensive play averages using ggplot. Add the weight of the average plays to the aesthetic and then reorder the teams by that weight. Add labels for the title and each axis.\nIowa clearly brings up the rear among teams in the Big 10 that averaged the most plays per game in 2022 at less than 60 plays per game. The Hawkeyes seem to value simply getting possessions and controlling the clock over getting off as many plays as possible. They are over 15 plays fewer than Purdue — the number one team of a top four of them, Northwestern, Indiana and Illinois. A lot of the teams in the Big 10 are bunched together around 70 plays or more per game, with the entirety of the top-half of the teams averaging over 69 plays per game.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=big22plays, \n    aes(\n      x=reorder(TeamFull, -avgPlays), weight = avgPlays)\n  ) +\n  labs(\n    title=\"Iowa values possessions over plays\", \n    x=\"School\", \n    y=\"Average Plays Per Game\"\n  ) + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nFilter the data for 2023 using the Big 10 list.\n\n\nCode\nbig23 &lt;- logs23|&gt; filter(TeamFull %in% big10)\n\n\nCalculate the average number of offensive plays per Big 10 team in 2023.\n\n\nCode\nbig23plays &lt;- big23 |&gt;\n  group_by(TeamFull) |&gt;\n  summarise(\n    avgPlays = mean(OffensivePlays)\n  )\n\n\nMake a bar chart of the 2023 Big Ten offensive play averages using ggplot. Add the weight of the average plays to the aesthetic and then reorder the teams by that weight. Add labels for the title and each axis.\nPenn State is way out in front among Big 10 teams in average plays per game up to this point in the 2023 season. Their 80.6 plays per game are over 7 more plays than second place, Purdue, and they’re averaging over 10 more plays per game this season than in 2022. Purdue and Wisconsin average over 70 plays per game as well to round out the top three, whilen Michigan and Iowa rank in the bottom two in the conference at less than 60 plays per game.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=big23plays, \n    aes(\n      x=reorder(TeamFull, avgPlays), weight = avgPlays)\n  ) +\n  labs(\n    title=\"Penn State's fast-paced offense\", \n    x=\"School\", \n    y=\"Average Plays Per Game\"\n  ) + \n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\nDivide the sum of the entirety of the Big 10 teams’ 2022 plays by 14 to get the average number of plays for the conference. That gets an average of about 67.99.\n\n\nCode\nbig22plays |&gt;\n  summarise(\n    avgPlays = (sum(avgPlays))/14\n  )\n\n\nDivide the sum of the entirety of the Big 10 teams’ 2023 plays by 14 to get the average number of plays for the conference. That gets an average of about 66.16.\n\n\nCode\nbig23plays |&gt;\n  summarise(\n    avgPlays = (sum(avgPlays))/14\n  )\n\n\nThe biggest takeaway to me is that Big 10 teams are running slightly fewer plays per game this season than in 2022, but not by much. Despite the NCAA aiming to shorten games — and in turn, possessions — by a noticeable margin through the new first down rule, Big 10 teams aren’t even averaging two less plays per game. There’s an influx of certain teams running more plays on average in 2023 — most notably Penn State and Wisconsin — and an influx of certain teams running less plays on average in 2023 — most notably Northwestern and Indiana — but at the end of the day, on average, there are only slightly less plays being run for the Big 10 teams."
  },
  {
    "objectID": "posts/running-on-empty/index.html",
    "href": "posts/running-on-empty/index.html",
    "title": "Running on Empty",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\n\n\nCode\ncfb2023 &lt;- read_csv(\"https://www.thescoop.org/sports-data-files/footballlogs23.csv\")\n\n\n\n\nCode\nbigten &lt;- cfb2023 |&gt;\n  filter(Conference == \"Big Ten Conference\")\n\n\n\n\nCode\nggplot() + geom_line(data=bigten, aes(x=Date, y=RushingAvg)) +\n    scale_y_continuous(limits = c(-4, 8))\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_line(data=bigten, aes(x=Date, y=RushingAvg, group=TeamFull)) + \n  scale_y_continuous(limits = c(-4, 8)) + \n  facet_wrap(~TeamFull)\n\n\n\n\nCode\nbigten |&gt; summarise(mean(RushingAvg))\n\n\n\n\nCode\nggplot() + \n  geom_hline(yintercept=3.816667, color=\"blue\") + \n  geom_line(data=bigten, aes(x=Date, y=RushingAvg, group=TeamFull)) + \n  scale_y_continuous(limits = c(-4, 8)) + \n  facet_wrap(~TeamFull)\n\n\n\n\n\nMaryland football’s rushing performance against Penn State last Saturday was immensely terrible, given the Big Ten’s average yards per rush this season.\nThe average yards per rush for Big Ten teams — taking into account all of their 2023 games — is 3.816667. The facet wraps above demonstrates each Big Ten team’s yards per rush average, for each game, against the conference’s average. Every team finds itself above or below the conference’s average for at least one game, but no team has as drastic differences as Maryland.\nThe Terps’ rushing started the year on fire — they kicked off their campaign with averages of 4.6 and 7.1 yards per carry — and were over the Big Ten’s average for each of their first five games of the season, coincidentally results that were all wins. But since then, they’ve been below the conference average in three of their last four games, which were all losses. The latter was a horrendous -3.2 yards per rush average against Penn State — by far both the worst mark of any Big Ten team and the most drastic number below the conference average for any Big Ten team."
  },
  {
    "objectID": "posts/nfl-redzone-epa/index.html",
    "href": "posts/nfl-redzone-epa/index.html",
    "title": "NFL Redzone EPA",
    "section": "",
    "text": "Load the tidyverse and NFL reader package.\n\n\nCode\nlibrary(tidyverse)\nlibrary(nflreadr)\nlibrary(ggalt)\n\n\nLoad 2022’s plays.\n\n\nCode\nplays_2022 &lt;- load_pbp(2022)\n\n\nCreate a list of just run or pass plays.\n\n\nCode\nrunorpass &lt;- c (\"run\", \"pass\")\n\n\nCreate a Miami dataframe that contains the Dolphins’ redzone plays during the first 3 weeks of the 2022 season.\n\n\nCode\nmia &lt;- plays_2022 |&gt;\n  filter(\n    week &lt;4,\n    posteam == \"MIA\",\n    side_of_field != \"MIA\",\n    yardline_100 &lt;21,\n    play_type %in% runorpass\n  ) \n\n\nFind the total EPA of the Dolphins’ redzone drives through the first 3 weeks of the 2022 season.\n\n\nCode\nmia |&gt;\n  summarise(\n    TotalEPA = sum (epa)\n)\n\n\n# A tibble: 1 × 1\n  TotalEPA\n     &lt;dbl&gt;\n1     9.00\n\n\nCreate a Miami dataframe that contains the Dolphins’ redzone plays during the entirety of the 2022 season.\n\n\nCode\nmia2 &lt;- plays_2022 |&gt;\n  filter(\n    posteam == \"MIA\",\n    side_of_field != \"MIA\",\n    yardline_100 &lt;21,\n    play_type %in% runorpass\n  ) \n\n\nFind the total EPA of the Dolphins’ redzone drives through the entirety of the 2022 season. Miami’s redzone EPA slightly increased over the course of the entire season, meaning they actually performed slightly better in the redzone as the season went on.\n\n\nCode\nmia2 |&gt;\n  summarise(\n    TotalEPA = sum (epa)\n)\n\n\n# A tibble: 1 × 1\n  TotalEPA\n     &lt;dbl&gt;\n1     12.7\n\n\nCreate a EPA Week 3 dataframe that contains each teams’ redzone plays and its total EPA in those plays during the first 3 weeks of the 2022 season.\n\n\nCode\nplays_week3 &lt;- plays_2022 |&gt;\n  filter(\n    week &lt;4,\n    yardline_100 &lt;21,\n    play_type %in% runorpass) |&gt;\n  group_by(posteam)\n\nepa_week3 &lt;- plays_week3 |&gt;\n  summarise(\n    TotalEPA = sum (epa),\n    TotalPlays = sum (yardline_100 &lt;21)\n)\n\n\nCreate a EPA Week 3 dataframe that contains each teams’ redzone plays and its total EPA in those plays during the first 8 weeks of the 2022 season.\n\n\nCode\nplays_week8 &lt;- plays_2022 |&gt;\n  filter(\n    week &lt;9,\n    yardline_100 &lt;21,\n    play_type %in% runorpass) |&gt;\n  group_by(posteam) \n\nepa_week8 &lt;- plays_week8 |&gt;\n  summarise(\n    TotalEPA = sum (epa),\n    TotalPlays = sum (yardline_100 &lt;21)\n)\n\n\nJoin the two EPA dataframes into one.\n\n\nCode\nepa &lt;- full_join(epa_week3, epa_week8, by = \"posteam\")\n\n\nCreate a dumbell chart showing EPA through Week 3 and Week 8 for each team.\n\n\nCode\nggplot() + \n  geom_dumbbell(\n    data=epa, \n    aes(y=reorder(posteam, TotalEPA.y), x=TotalEPA.x, xend=TotalEPA.y),\n    linewidth = 0.6,\n    colour_x = \"green\",\n    colour_xend = \"blue\") +\n  labs(title=\"Vikings' redzone success gets vastly improved over time\", subtitle=\"The Vikings' -10.3 redzone EPA through Week 3 increased to 10.8 through Week 8.\", y=\"Team\", x=\"EPA\", caption=\"Source: nflreadr | By Brandon Schwartzberg\") +\n  theme_minimal()\n\n\nWarning in geom_dumbbell(data = epa, aes(y = reorder(posteam, TotalEPA.y), :\nIgnoring unknown parameters: `linewidth`\n\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\nThe Minnesota Vikings caught my eye as one of the team that mostly improved their redzone success as the 2022 season went on. The Vikings’ redzone epa through Week 3 of -10.3 was fifth-worst in the NFL, while their redzone epa through Week 8 of 10.8 was sixth-best, a complete turnaround for them. The next two teams that improved the most in the redzone from Week 3 to Week 8 were the Chiefs and the Jets.\nWhile the Vikings headlined the teams that improved their redzone success, the Jaguars headlined the teams that were worse in the redzone. Their redzone epa fell from -1.2 to -20.6 between Weeks 3 and 8, a huge dropoff. So while they struggled a little bit in the beginning of the season, they turned into the second-worst team by Week 8. That brings me to another team that struggled from the beginning of the season up to Week 8, the Broncos. Their epa only dropped by about seven, but they sat last in redzone epa at both marks of the season."
  },
  {
    "objectID": "posts/hello-world/index.html",
    "href": "posts/hello-world/index.html",
    "title": "Hello World!",
    "section": "",
    "text": "Welcome to the first edition of the Brandon Schwartzberg blog. It is surely going to be fantastic.\nI am going to wow you."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/kevin-willard-team/index.html",
    "href": "posts/kevin-willard-team/index.html",
    "title": "What defines a Kevin Willard team?",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(cowplot)\n\n\n\n\nCode\nlogs &lt;- read_csv(\"https://thescoop.org/sports-data-files/cbblogs1524.csv\")\n\n\n\n\nCode\nsetonhall &lt;- logs |&gt;\n  filter(\n    Team == \"Seton Hall\",\n    Season &lt;= \"2022\"\n  ) |&gt;\n  mutate(differential = TeamScore - OpponentScore)\n\nsetonhallavg &lt;- setonhall |&gt;\n  summarise(\n    avg_Fgattempt = mean(TeamFGA),\n    avg_Ofgattempt = mean(OpponentFGA),\n    avg_3pattempt = mean(Team3PA),\n    avg_O3pattempt = mean(Opponent3PA),\n    avg_FTattempt = mean(TeamFTA),\n    avg_Oftattempt = mean(OpponentFTA),\n    avg_OFFrebound = mean(TeamOffRebounds),\n    avg_Ooffrebound = mean(OpponentOffRebounds),\n    avg_Totalrebound = mean(TeamTotalRebounds),\n    avg_Ototalrebound = mean(OpponentTotalRebounds),\n    avg_turnovers = mean(TeamTurnovers),\n    avg_Oturnovers = mean(OpponentTurnovers),\n    avg_score = mean(TeamScore),\n    avg_OPPscore = mean(OpponentScore)\n  )\n\nsetonhall2 &lt;- setonhall |&gt;\n  group_by(Season) |&gt;\n  summarise(\n    Free_Throw_Differential = mean((TeamFTA) - mean(OpponentFTA)),\n    Rebound_Differential = mean((TeamTotalRebounds) - mean(OpponentTotalRebounds))\n  )\n\n\n\n\nCode\nbar1 &lt;- ggplot() + \n  geom_bar(data=setonhall2, aes(x=Season, weight=Free_Throw_Differential)) + \n  coord_flip() +\n  labs(title=\"Willard's Seton Hall's Teams' ... \", subtitle = \"The teams' biggest strengths — free throw and rebound disparities — varied to a degree.\",  x=\"Season\", y=\"Free Throw Differential\", caption = \"\") + \n  theme_minimal() \n  \nbar2 &lt;- ggplot() + \n  geom_bar(data=setonhall2, aes(x=Season, weight=Rebound_Differential)) + \n  coord_flip() +\n  labs(title=\"Strengths Slightly Flucuate\", subtitle = \"\",  x=\"Season\", y=\"Rebound Differential\", caption = \"Source: NCAA | By Brandon Schwartzberg\") + \n  theme_minimal() \n\nplot_grid(bar1, bar2)\n\n\n\n\n\nThe biggest strengths of Kevin Willard’s Seton Hall’s teams were their free throw and rebound differentials. Especially following the 2014-15 season, Willard’s Seton Hall teams consistently — at varying degrees — registered more free throw attempts than their opponents and out-rebounded their opponents. At Seton Hall the biggest things that defined a Willard team were being more physical, plain and simple.\n\n\nCode\nmaryland &lt;- logs |&gt;\n  filter(\n    Team == \"Maryland\",\n    Season &gt; \"2022\"\n  ) |&gt;\n  mutate(differential = TeamScore - OpponentScore)\n\nmarylandavg &lt;- maryland |&gt;\n  summarise(\n    avg_Fgattempt = mean(TeamFGA),\n    avg_Ofgattempt = mean(OpponentFGA),\n    avg_3pattempt = mean(Team3PA),\n    avg_O3pattempt = mean(Opponent3PA),\n    avg_FTattempt = mean(TeamFTA),\n    avg_Oftattempt = mean(OpponentFTA),\n    avg_OFFrebound = mean(TeamOffRebounds),\n    avg_Ooffrebound = mean(OpponentOffRebounds),\n    avg_Totalrebound = mean(TeamTotalRebounds),\n    avg_Ototalrebound = mean(OpponentTotalRebounds),\n    avg_turnovers = mean(TeamTurnovers),\n    avg_Oturnovers = mean(OpponentTurnovers),\n    avg_score = mean(TeamScore),\n    avg_OPPscore = mean(OpponentScore)\n  )\n\nmaryland2 &lt;- maryland |&gt;\n  group_by(Season) |&gt;\n  summarise(\n    Three_Point_Attempt_Differential = mean((Team3PA) - mean(Opponent3PA)),\n    Free_Throw_Differential = mean((TeamFTA) - mean(OpponentFTA)),\n  )\n\n\n\n\nCode\nbar3 &lt;- ggplot() + \n  geom_bar(data=maryland2, aes(x=Season, weight=Three_Point_Attempt_Differential)) + \n  labs(title=\"Willard's Maryland's Teams ... \", subtitle = \"The teams' biggest strengths are three point and free throw disparities.\",  x=\"Three Point Differential\", y=\"Season\", caption = \"\") + \n  theme_minimal() \n  \nbar4 &lt;- ggplot() + \n  geom_bar(data=maryland2, aes(x=Season, weight=Free_Throw_Differential)) + \n  labs(title=\"Have Clear Strengths\", subtitle = \"\",  x=\"Free Throw Differential\", y=\"Season\", caption = \"Source: NCAA | By Brandon Schwartzberg\") + \n  theme_minimal() \n\nplot_grid(bar3, bar4)\n\n\n\n\n\nThe biggest strengths through Kevin Willard’s young Maryland team’s has been three point and free throw differentials. The Terps under Willard have made it a mission to get to the foul line consistently more than the opposition, and get off more three pointers than the opposition. Willard has talked a lot at Maryland about letting his shooters shoot, and that is clearly evident with how many more three’s they take on average per game in comparison to their opponent. And for free throws, an early sign — but one of consistency — is that Willard’s Maryland team’s are going to get to the foul line often in his tenure.\n\n\nCode\nwillard &lt;- maryland |&gt; full_join(setonhall)\n\n\nJoining with `by = join_by(Season, Game, Date, TeamFull, Opponent, HomeAway,\nW_L, TeamScore, OpponentScore, TeamFG, TeamFGA, TeamFGPCT, Team3P, Team3PA,\nTeam3PPCT, TeamFT, TeamFTA, TeamFTPCT, TeamOffRebounds, TeamTotalRebounds,\nTeamAssists, TeamSteals, TeamBlocks, TeamTurnovers, TeamPersonalFouls,\nOpponentFG, OpponentFGA, OpponentFGPCT, Opponent3P, Opponent3PA, Opponent3PPCT,\nOpponentFT, OpponentFTA, OpponentFTPCT, OpponentOffRebounds,\nOpponentTotalRebounds, OpponentAssists, OpponentSteals, OpponentBlocks,\nOpponentTurnovers, OpponentPersonalFouls, URL, Conference, Team, TeamSRS,\nTeamSOS, OpponentSRS, OpponentSOS, Blank, season, differential)`\n\n\nCode\nwillard2 &lt;- willard |&gt;\n  group_by(Team) |&gt;\n  summarise(\n    Three_Point_Attempt_Differential = mean((Team3PA) - mean(Opponent3PA)),\n    Rebound_Differential = mean((TeamTotalRebounds) - mean(OpponentTotalRebounds))\n  )\n\n\n\n\nCode\nbar5 &lt;- ggplot() + \n  geom_bar(data=willard2, aes(x=Team, weight=Three_Point_Attempt_Differential)) +\n  labs(title=\"Kevin Willard's Teams Aren't The Same\", subtitle = \"A pair of clear differences can be seen in Willard's Maryland and Seton Hall teams.\",  x=\"Team\", y=\"Three Point Differential\", caption = \"\") + \n  theme_minimal() \n  \nbar6 &lt;- ggplot() + \n  geom_bar(data=willard2, aes(x=Team, weight=Rebound_Differential)) +\n  labs(title = \"\", subtitle= \"\", x=\"Team\", y=\"Rebound Differential\",  caption=\"Source: NCAA | By Brandon Schwartzberg\") + \n  theme_minimal() \n\nplot_grid(bar5, bar6)\n\n\n\n\n\nWhen it comes to comparing Kevin Willard’s Seton Hall team’s to his Maryland team’s, they aren’t the same. At Seton Hall, Willard’s team’s constantly out-rebounded their opponents, making that a focal point of the team — they really made it an effort to crash the boards. But so far at Maryland, his teams haven’t made rebounding a huge emphasis — they much rather would get out on a fastbreak and shoot threes. Their average three-point differential is by far ahead of the Seton Hall team’s, showing arguably the biggest difference between Willard’s time at the schools."
  },
  {
    "objectID": "posts/volleyball-aces/index.html",
    "href": "posts/volleyball-aces/index.html",
    "title": "Volleyball Aces",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggbeeswarm)\nlibrary(ggrepel)\nset.seed(1234)\n\n\n\n\nCode\nlogs &lt;- read_csv(\"https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_playerstats_2023.csv\")\n\n\n\n\nCode\nplayers &lt;- logs |&gt; filter(mp&gt;19)\nplayers2 &lt;- players |&gt; filter(!is.na(aces), !is.na(pos))\nplayers3 &lt;- players2 |&gt; mutate(acespermatch=(aces/mp))\n\nsummary(players$acespermatch)\n\n\nWarning: Unknown or uninitialised column: `acespermatch`.\n\n\nLength  Class   Mode \n     0   NULL   NULL \n\n\nCode\nplayersaces &lt;- players3 |&gt; filter(acespermatch&gt;0.7142)\n\nggplot() + geom_beeswarm(data=playersaces, aes(x=pos, y=acespermatch), color=\"grey\")\n\n\n\n\n\n\n\nCode\numd &lt;- playersaces |&gt; \n  filter(team == \"Maryland Terrapins, Terps\") |&gt; \n  filter(mp&gt;19) |&gt; \n  arrange(desc(acespermatch))\n\nggplot() + \n  geom_quasirandom(\n    data=playersaces, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespermatch), color=\"grey\") + \n  geom_quasirandom(\n    data=umd, \n    groupOnX=TRUE, \n    aes(x=pos, y=acespermatch), color=\"red\") +\n  geom_text_repel(\n    data=umd, \n    aes(x=pos, y=acespermatch, label=full_name)) +\n  labs(title=\"Lilly Gunter is one of the best defensive specialists at registering aces per match\", subtitle=\"Gunter's 1.1 aces per match is in the top-half all defensive specialists in the country.\", caption=\"Source: NCAA | By Brandon Schwartzberg\")  + theme_minimal()\n\n\n\n\n\nLilly Gunter, Maryland’s star defensive specialist, is among the best at her position in all of Division I. Gunter’s 1.1 aces per match ranks in the top-half among all Division I defensive specialists.\nGunter’s numbers are especially more impressive when you take into account that she is one of just three Terps to play at least 20 matches, and ranks second on the team in aces per match. She does so at a position where more aces per match come from outside hitters, like Sam Csire, and setters, like Erin Engel, when taken into account all Division I players. With that reasoning, a point can be made that Gunter is Maryland’s most valuable player, when taking into account her stats and position."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/third-and-six/index.html",
    "href": "posts/third-and-six/index.html",
    "title": "Maryland does better passing than rushing on 3rd-and-6 in the Michael Locksley era",
    "section": "",
    "text": "Load the tidyverse.\n\n\nCode\nlibrary(tidyverse)\nlibrary(cfbfastR)\n\n\nLoad the play-by-play data.\n\n\nCode\nplays &lt;- load_cfb_pbp(seasons = c(2019, 2020, 2021, 2022, 2023))\n\n\nFind all plays where the down and distance is third-and-six. Save that to a new dataframe called “third_and_six”.\n\n\nCode\nthird_and_six &lt;- plays |&gt; filter(down == 3, distance == 6)\n\n\nCount the number of play types on third-and-six.\n\n\nCode\nthird_and_six |&gt; \n  group_by(play_type) |&gt; \n  summarise(count = n())\n\n\nWhat you get is 17 field goal attempts (1 blocked field goal + 13 successful field goals + 3 missed field goals), 142 fumbles (83 opponent fumble recoveries + 1 opponent fumble recovery touchdown + 55 own fumble recoveries + 3 fumble return touchdowns), 7,545 pass plays (182 interception returns + 24 interception return touchdowns + 2,859 pass incompletions + 3,484 pass receptions + 383 passing touchdowns + 613 sacks), 813 penalties, 3 punts, 2,459 runs (2,359 rushes + 100 rushing touchdowns), 2 safeties and 674 timeouts.\nAround 21 percent of all third-and-six plays are runs, compared to around 65 percent of all third-and-six plays being passes.\nCreate a new dataframe of all of the rushes on third-and-six since 2019.\n\n\nCode\nrushplays &lt;- third_and_six |&gt; filter(play_type == 'Rush'| play_type == 'Rushing Touchdown')\n\n\nGet the average yards gained on third-and-six rushes since 2019.\n\n\nCode\nrushplays |&gt;\n  summarise(\n    mean_RYG = mean(yards_gained)\n  )\n\n\nCreate a new dataframe of all of the passes on third-and-six since 2019.\n\n\nCode\npassplays &lt;- third_and_six |&gt; filter(play_type == 'Passing Touchdown'| play_type == 'Pass Reception' | play_type == 'Pass Incompletion' | play_type == 'Interception Return' | play_type == 'Interception Return Touchdown' | play_type == 'Sack')\n\n\nGet the average yards gained on third-and-six passes since 2019.\n\n\nCode\npassplays |&gt;\n  summarise(\n    mean_PYG = mean(yards_gained)\n  )\n\n\nOn third-and-six, the average yards gained on runs was actually slightly higher (6.05) than on passes (5.85). In my opinion, the reason for that is the negative potential yards for a pass play — the most notable being interception returns — far outweights the negative potential yards for a rush.\nCreate new dataframes for rush plays on third-and-six for each season since 2019.\n\n\nCode\nrush2019 &lt;- rushplays |&gt; filter(year == '2019')\n\n\n\n\nCode\nrush2020 &lt;- rushplays |&gt; filter(year == '2020')\n\n\n\n\nCode\nrush2021 &lt;- rushplays |&gt; filter(year == '2021')\n\n\n\n\nCode\nrush2022 &lt;- rushplays |&gt; filter(year == '2022')\n\n\n\n\nCode\nrush2023 &lt;- rushplays |&gt; filter(year == '2023')\n\n\nThe most third-and-six rushes came in 2022, with 768 of them. Then followed was 2021 (507), 2019 (506), 2023 as of now (380) and 2020 (298).\nFind out which team has the most third-and-six rushes in each year since 2019.\n\n\nCode\nrushplays |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nNavy has run the most times (49) on third-and-six since 2019.\n\n\nCode\nrush2019 |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nGeorgia Southern ran the most times (13) on third-and-six in 2019.\n\n\nCode\nrush2020 |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nNavy ran the most times (12) on third-and-six in 2020.\n\n\nCode\nrush2021 |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nArmy ran the most times (17) on third-and-six in 2021.\n\n\nCode\nrush2022 |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nNavy and Kennesaw State ran the most times (13) on third-and-six in 2022.\n\n\nCode\nrush2023 |&gt; \n  group_by(pos_team) |&gt;\n  summarise(count = n())|&gt; \n  arrange(desc(count))\n\n\nAir Force, Prairie View, South Florida and West Virginia have run the most times (6) on third-and-six in 2023 so far.\nCreate a new dataframe showing only Maryland plays on third-and-six.\n\n\nCode\nmd_third_and_six &lt;- third_and_six |&gt; filter(pos_team == \"Maryland\")\n\n\nCount the number of Maryland’s play types on third-and-six.\n\n\nCode\nmd_third_and_six |&gt; \n  group_by(play_type) |&gt; \n  summarise(count = n())\n\n\nAmong Maryland’s third-and-six plays since 2019, 2 of the them have resulted in fumble recoveries for the opposition, 33 are passes (1 interception + 11 incompletions + 13 receptions + 4 passing touchdowns + 4 sacks), 16 are runs (15 rushes + 1 rushing touchdown), 2 are penalties and 2 are timeouts.\nAround 29 percent of Maryland’s third-and-six plays since 2019 are runs, compared to 60 pass plays.\nCreate a new dataframe of all of Maryland’s rushes on third-and-six since 2019.\n\n\nCode\nmdrushplays &lt;- md_third_and_six |&gt; filter(play_type == 'Rush'| play_type == 'Rushing Touchdown')\n\n\nGet the average yards gained on Maryland’s third-and-six rushes since 2019.\n\n\nCode\nmdrushplays |&gt;\n  summarise(\n    mean_RYG = mean(yards_gained)\n  )\n\n\nMaryland’s average yards gained on third-and-six runs since 2019 is 6.5.\nCreate a new dataframe of all of Maryland’s non-touchdown rushes on third-and-six since 2019.\n\n\nCode\nmdrushplays2 &lt;- md_third_and_six |&gt; filter(play_type == 'Rush')\n\n\nGet the average yards gained on Maryland’s non-touchdown third-and-six rushes since 2019.\n\n\nCode\nmdrushplays2 |&gt;\n  summarise(\n    mean_RYG = mean(yards_gained)\n  )\n\n\nMaryland’s average yards gained on non-touchdown third-and-six runs since 2019 is 5.9.\nCreate a new dataframe of all of Maryland’s simple pass completions on third-and-six since 2019.\n\n\nCode\nmdpassplays2 &lt;- md_third_and_six |&gt; filter(play_type == 'Pass Reception')\n\n\nGet the average yards gained on Maryland’s simple pass completions on third-and-six since 2019.\n\n\nCode\nmdpassplays2 |&gt;\n  summarise(\n    mean_RYG = mean(yards_gained)\n  )\n\n\nMaryland’s average yards gained on simple pass completions on third-and-six since 2019 is 11.\nCreate new dataframes for Maryland’s rush plays on third-and-six for each season since 2019.\n\n\nCode\nmdrush2019 &lt;- mdrushplays |&gt; filter(year == '2019')\n\n\n\n\nCode\nmdrush2020 &lt;- mdrushplays |&gt; filter(year == '2020')\n\n\n\n\nCode\nmdrush2021 &lt;- mdrushplays |&gt; filter(year == '2021')\n\n\n\n\nCode\nmdrush2022 &lt;- mdrushplays |&gt; filter(year == '2022')\n\n\n\n\nCode\nmdrush2023 &lt;- mdrushplays |&gt; filter(year == '2023')\n\n\nMaryland’s most third-and-six rushes came in 2022, with 6 of them. Then followed was 2023 as of now (5), 2021 (4), 2019 (1) and 2020 (0).\nCreate a new dataframe of all of Maryland’s rushes and passes on third-and-six since 2019.\n\n\nCode\nmdrandpplays &lt;- md_third_and_six |&gt; filter(play_type == 'Rush'| play_type == 'Rushing Touchdown' | play_type == 'Passing Touchdown'| play_type == 'Pass Reception' | play_type == 'Pass Incompletion' | play_type == 'Interception Return' | play_type == 'Interception Return Touchdown' | play_type == 'Sack')\n\n\n\n\nCode\nmdrandpplays2 &lt;- bind_rows(mdrushplays2, mdpassplays2)\n\n\n\n\nCode\nmdrandpplays3 &lt;- mdrandpplays2 |&gt; \n  group_by(play_type) |&gt;\n   summarise(\n    avgyardsgained = mean(yards_gained) \n   )\n\n\nUnder head coach Michael Locksley, Maryland has historically passed the ball twice as often as it’s ran the ball on third-and-six. Also, taking only into account pass completions that don’t go for touchdowns and runs that don’t go for touchdowns — as in just trying to get the first down — the Terps on average will get five more yards through the air. That’s why it was so surprising when Maryland ran the ball on third-and-six against Illinois.\n\n\nCode\nggplot() + \n  geom_bar(\n    data=mdrandpplays3, \n    aes(x=reorder(play_type, -avgyardsgained), \n      weight=avgyardsgained)) +\n  labs(\n    title=\"Terps fare better through the air\", \n    x=\"Type of Non-touchdown Play\", \n    y=\"Average Yards Gained\") + \n  theme_minimal()"
  },
  {
    "objectID": "posts/umd-football-ypp/index.html",
    "href": "posts/umd-football-ypp/index.html",
    "title": "Maryland…",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(ggrepel)\n\n\nCreate a dataframe using college football data over the past decade.\n\n\nCode\nlogs &lt;- read_csv(\"https://thescoop.org/sports-data-files/footballlogs1123.csv\")\n\n\nMutate the outcome of games from wins and losses into 1’s and 0’s.\n\n\nCode\nwinlosslogs &lt;- logs |&gt; \n  mutate(\n    wins = case_when(\n      grepl(\"W\", Outcome) ~ 1, \n      grepl(\"L\", Outcome) ~ 0)\n)\n\n\nCalculate a team’s total plays, total yards, opponent plays, opponent yards and wins, and both their and their opponent’s yards per play in each season over the last decade.\n\n\nCode\nwinlosslogs |&gt; \n  group_by(Team, Season) |&gt; \n  summarise(\n    TotalPlays = sum(OffensivePlays), \n    TotalYards = sum(OffensiveYards), \n    DefensivePlays = sum(DefPlays), \n    DefensiveYards = sum(DefYards), \n    TotalWins = sum(wins)) |&gt; \n  mutate(\n    OffensiveYPP = TotalYards/TotalPlays, \n    DefensiveYPP = DefensiveYards/DefensivePlays) -&gt; ypp\n\n\nCreate a bubble chart displaying a teams’ offensive yards per game and opponent yards per game for each season on the x and y axis’, and add the size element to the bubbles to display the amount of wins the team had in that season.\n\n\nCode\nggplot() + \n  geom_point(\n    data=ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins),\n    alpha = .3) + \n  scale_size(range = c(3, 8), name=\"Wins\")\n\n\n\n\n\nCreate a dataframe for only Maryland.\n\n\nCode\nmd &lt;- ypp |&gt; filter(Team == \"Maryland\")\n\n\nAdd in Maryland as a layer, colored red. Add lines that show the average for all teams for the two yards per play metrics. Label Maryland’s dots with the appropriate season. Add a heading and subheading.\n\n\nCode\nypp |&gt; \n  ungroup() |&gt; \n  summarise(\n    offense = mean(OffensiveYPP), \n    defense = mean(DefensiveYPP)\n    )\n\n\n# A tibble: 1 × 2\n  offense defense\n    &lt;dbl&gt;   &lt;dbl&gt;\n1    5.73    5.61\n\n\n\n\nCode\nggplot() + \n  geom_point(\n    data=ypp, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"grey\", \n    alpha=.5) + \n  geom_point(\n    data=md, \n    aes(x=OffensiveYPP, y=DefensiveYPP, size=TotalWins), \n    color=\"red\") + \n  geom_vline(xintercept = 5.700174) + \n  geom_hline(yintercept = 5.55143) +\n  geom_text_repel(\n    data=md, \n    aes(x=OffensiveYPP, y=DefensiveYPP, label=Season) \n  ) +\n  labs(title=\"Mike Locksley has Maryland trending in right direction\", subtitle=\"The majority of the Terps' best seasons over the past decacde have come in the Locksley era.\", caption=\"Source: NCAA | By Brandon Schwartzberg\")  + theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank()\n    )\n\n\n\n\n\nMaryland football hasn’t been fantastic over the past decade. But since Mike Locksley took over in 2019, he’s got the Terps trending in the right direction.\nTaking into account Maryland’s offensive yards per play and defensive yards per play against the average among all Division I schools since 2011, plus its win total — displayed on the bubble chart — the majority of the Terps’ best seasons have happened in the Locksley era. Maryland’s best full seasons in the past decade occurred in 2013 and 2020 — the latter of which Locksley’s second season at the helm. This season’s Terps are on pace to be the best among that group.\nMaryland struggled mightily in 2019 — Locksley’s first season — as it was below average in both offensive and defensive yards per play, and the result was a lot of losses. That was the lone poor season for the Terps under Locksley in comparison with the other years in the past decade; it pairs with the Terps’ 2011, 2015, 2016 and 2017 seasons.\nEvery other season besides Maryland’s 2019 campaign featured an above average offense. And Locksley has done a great job at building a complete team ever since, which can clearly be seen with the track the Terps are on in 2023."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "sports_blog",
    "section": "",
    "text": "What defines a Kevin Willard team?\n\n\n\n\n\n\n\n\n\n\n\n\nNov 14, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nRunning on Empty\n\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nVikings find redzone success over time\n\n\n\n\n\n\n\n\n\n\n\n\nOct 31, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nLilly Gunter is a star\n\n\n\n\n\n\n\n\n\n\n\n\nOct 26, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nMike Locksley has Maryland trending in right direction\n\n\n\n\n\n\n\n\n\n\n\n\nOct 25, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nMaryland does better passing than rushing on 3rd-and-6 in the Michael Locksley era\n\n\n\n\n\n\n\n\n\n\n\n\nOct 17, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nBig Ten teams are averaging only slightly fewer plays in 2023 than in 2022\n\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nHello World!\n\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nBrandon Schwartzberg\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]